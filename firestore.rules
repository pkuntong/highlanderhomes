rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Common functions for security rules
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(resource) {
      return isAuthenticated() && 
             resource.data.createdBy == request.auth.uid;
    }
    
    function isAdminUser() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/adminUsers/$(request.auth.uid));
    }
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Properties collection
    match /properties/{propertyId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
                      request.resource.data.createdBy == request.auth.uid;
      allow update, delete: if isAdminUser() || isOwner(resource);
    }
    
    // Documents collection with security
    match /documents/{documentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
                      request.resource.data.createdBy == request.auth.uid;
      allow update, delete: if isAdminUser() || isOwner(resource);
    }
    
    // Admin users collection
    match /adminUsers/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow write: if isAdminUser();
    }
  }
}
